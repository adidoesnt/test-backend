name: Deploy

on:
    push:
        branches:
            - main
            - test

jobs:
    deploy:
        runs-on: ubuntu-latest

        env:
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
            HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
            FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
            REVERSE_PROXY_URL: ${{ secrets.REVERSE_PROXY_URL }}
            NODE_ENV: ${{ secrets.FRONTEND_URL }}
            NEXT_PUBLIC_BACKEND_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
            NEXT_PUBLIC_DEPLOYMENT: ${{ secrets.NEXT_PUBLIC_DEPLOYMENT }}
            GREEN_URL: ${{ secrets.GREEN_URL }}
            BLUE_URL: ${{ secrets.BLUE_URL }}

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: "18"

            - name: Cache Heroku CLI
              id: cache-heroku-cli
              uses: actions/cache@v2
              with:
                path: ~/.cache/heroku
                key: ${{ runner.os }}-heroku-cli-${{ hashFiles('**/.profile.d/heroku.sh') }}
                restore-keys: |
                  ${{ runner.os }}-heroku-cli-

            - name: Install Heroku CLI
              if: steps.cache-heroku-cli.outputs.cache-hit != 'true'
              run: |
                  curl https://cli-assets.heroku.com/install-ubuntu.sh | sh

            - name: Check if Heroku App Exists
              id: heroku-app-check
              run: |
                if heroku apps:info $HEROKU_APP_NAME; then
                    echo "::set-output name=app_exists::true"
                else
                    echo "::set-output name=app_exists::false"
                fi
              
            - name: Create Heroku App
              if: steps.heroku-app-check.outputs.app_exists != 'true'
              run: |
                heroku create $HEROKU_APP_NAME
                    heroku git:remote -a $HEROKU_APP_NAME

            - name: Set Heroku Config
              run: |
                  heroku config:set FRONTEND_URL=$FRONTEND_URL REVERSE_PROXY_URL=$REVERSE_PROXY_URL NODE_ENV=$NODE_ENV NEXT_PUBLIC_BACKEND_URL=$NEXT_PUBLIC_BACKEND_URL NEXT_PUBLIC_DEPLOYMENT=$NEXT_PUBLIC_DEPLOYMENT GREEN_URL=$GREEN_URL BLUE_URL=$BLUE_URL -a $HEROKU_APP_NAME

            - name: Deploy to Heroku
              run: |
                  git config --global user.email "actions@github.com"
                  git config --global user.name "GitHub Actions"
                  git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:refs/heads/main
